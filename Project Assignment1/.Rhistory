rnorm(10, mean = 100, sd = 25)
?rpois
rpois(10)
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colMeans(my_pois)
hist(cm)
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIXlt(Sys.time())
t2
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(d1)
months(t1)
quarters(t2)
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() >  t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
cube <- function(x,n) {}
cube <- function(x,n) {
x^3
}
cube(3)
x <- 10
if(x>5) {
x <- 0
}
test <- function(x) {
x <- 1:10
if(x>5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y+z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x<3) {
NA
} else {
10
}
y
f(3)
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() {
x
}
setinv <- function(i) {
inv <- i
}
getinv <- function() {
inv
}
list(set = set,
get = get,
setinv = setinv,
getinv = getinv)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getinv()
if(!is.null(inv)) {
print("getting cache inverse")
return inv
}
matr <- x$get()
inv <- solve(matr,...)
x$setinv(inv)
return(inv)
}
## Put comments here that give an overall description of what your
## functions do
## Write a short comment describing this function
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() {
x
}
setinv <- function(i) {
inv <- i
}
getinv <- function() {
inv
}
list(set = set,
get = get,
setinv = setinv,
getinv = getinv)
}
## Write a short comment describing this function
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getinv()
if(!is.null(inv)) {
message("getting cache inverse")
return inv
}
matr <- x$get()
inv <- solve(matr,...)
x$setinv(inv)
return(inv)
}
makeCacheMatrix <- function(x = matrix()) {
inv <- NULL
set <- function(y) {
x <<- y
inv <<- NULL
}
get <- function() {
x
}
setinv <- function(i) {
inv <<- i
}
getinv <- function() {
inv
}
list(set = set,
get = get,
setinv = setinv,
getinv = getinv)
}
cacheSolve <- function(x, ...) {
## Return a matrix that is the inverse of 'x'
inv <- x$getinv()
if(!is.null(inv)) {
message("getting cache inverse")
return inv
}
matr <- x$get()
inv <- solve(matr, ...)
x$setinv(inv)
return(inv)
}
cacheSolve <- function(x, ...) {
# get the cached inverse
inv <- x$getinv()
if(!is.null(inv)) {
# if the inverse if actually cached, just return it
message("getting cached inverse")
return(inv)
}
# otherwise, calculate the inverse and cache it
matr <- x$get()
inv <- solve(matr, ...)
x$setinv(inv)
return(inv)
}
cacheSolve <- function(x, ...) {
# get the cached inverse
inv <- x$getinv()
if(!is.null(inv)) {
# if the inverse if actually cached, just return it
message("getting cached inverse")
return(inv)
}
# otherwise, calculate the inverse and cache it
matr <- x$get()
inv <- solve(matr, ...)
x$setinv(inv)
return(inv)
}
matr <- makeCacheMatrix(matrix(1:4, 2, 2))
cacheSolve(matr)
cacheSolve(matr)
matr$set(matrix(5:8, 2, 2)
)
cacheSolve(matr)
cacheSolve(matr)
cacheSolve(matr)
## My comments on what this does. Basically, it is very similar to
## the example with the vector.
# We create a special "matrix" object that cache the inverse
makeCacheMatrix <- function(x = matrix()) {
# The inverse is initially stored as NULL
inv <- NULL
# Set sets the value of the matrix
set <- function(y) {
x <<- y
inv <<- NULL
}
# Get returns the value of the original matrix
get <- function() {
x
}
# Setinv sets the value of the inversed matrix,
# which is called by cacheSolve() for the first
# cacheSolve()
# It will store the value using the superassignment <<-
setinv <- function(i) {
inv <<- i
}
# Get returns the value of the inversed matrix from
# cacheSolve()
getinv <- function() {
inv
}
# The list is accessed each time MakeCacheMatrix()
# creates a new object.
# This is a list of internal functions, so a calling
# function knows how to access them.
list(set = set,
get = get,
setinv = setinv,
getinv = getinv)
}
## The following function calculates the inverse of the matrix,
## created with the function above.
cacheSolve <- function(x, ...) {
# First get the inverse to check if it has already been
# cached
inv <- x$getinv()
# If the inverse is already cached, just return
# with a message that it is 'getting cached inverse'
if(!is.null(inv)) {
message("getting cached inverse")
return(inv)
}
# If not, calculate the inverse and cache it
matr <- x$get()
inv <- solve(matr, ...)
x$setinv(inv)
return(inv)
}
matr <- makeCacheMatrix(matrix(1:4, 2, 2))
cacheSolve(matr)
cacheSolve(matr)
matra <- makeCacheMatrix(matrix(1:4, 2, 2))
cacheSolve(matra)
cacheSolve(matra)
matr <- makeCacheMatrix(matrix(1:6, 3, 3))
cacheSolve(matr)
cacheSolve(matr)
matr <- makeCacheMatrix(matrix(1:4, 2, 2))
cacheSolve(matr)
cacheSolve(matr)
matr <- makeCacheMatrix(matrix(1:9, 3, 3))
cacheSolve(matr)
matr <- makeCacheMatrix(matrix(1:16, 4, 4))
cacheSolve(matr)
matr <- makeCacheMatrix(matrix(1:4, 2, 2))
matr <- makeCacheMatrix(matrix(1:4, 2, 2))
cacheSolve(matr)
cacheSolve(matr)
library(XML)
install.packages('XML')
library(XML)
fileUrl <- "https://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
fileUrl <- "http://www.w3schools.com/xml/simple.xml"
doc <- xmlTreeParse(fileUrl, useInternal = TRUE)
rootNode <- xmlRoot(doc)
xmlName(rootNode)
doc
names(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
rootNode[[1]][[2]]
rootNode[[1]][[1]]
xmlSApply(rootNode, xmlValue)
xpathSApply(rootNode, "//name",xmlValue)
fileUrl <- "http://espn.go.com/nfl/team/_/name/bal/baltimore-ravens"
doc <- htmlTreeParse(fileUrl, useInternal = TRUE)
scores <- xpathSApply(doc, "//li[@class='score']", xmlValue)
teams <- xpathSApply(doc, "//li[@class='team-name']", xmlValue)
scores
teams
getwd()
library(httr)
myapp = oauth_app("twitter", key = "j5PKAtLui0YwOADn1h4pfYQFg",
secret = "i5r8dVUFPtP0jmk2p0PlBlXlBeUBXah7qZfy7BqhTafL2J01YX")
sig = sign_oauth1.0(myapp,
token = "2976889521-heneahnPxX3IsHxxx2xH1pwOhhwqY5lUPXd7KbL",
token_secret = "8SDU0cTdpb6xavsKEUIFIfnFnsTN9vgaTjUW8Ue7ne8vP")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
json1 = content[homeTL]
json1 = content(homeTL)
library(jsonlite)
json1 = content(homeTL)
json2 = jsonlite::fromJSON(toJSON(json1))
json[1,1:4]
json2[1,1:4]
json2
json1
json1=content(homeTL)
json2=jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
library(httr); html2 = GET(url)
homeTL
myapp = oauth_app("twitter", key = "j5PKAtLui0YwOADn1h4pfYQFg",
secret = "i5r8dVUFPtP0jmk2p0PlBlXlBeUBXah7qZfy7BqhTafL2J01YX")
sig = sign_oauth1.0(myapp,
token = "2976889521-heneahnPxX3IsHxxx2xH1pwOhhwqY5lUPXd7KbL",
token_secret = "8SDU0cTdpb6xavsKEUIFIfnFnsTN9vgaTjUW8Ue7ne8vP")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
json1=content(homeTL)
json2=jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
json2
str(json2)
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
json1
content(homeTL)
homeTL
myapp = oauth_app("twitter", key = "j5PKAtLui0YwOADn1h4pfYQFg",
secret = "i5r8dVUFPtP0jmk2p0PlBlXlBeUBXah7qZfy7BqhTafL2J01YX")
sig = sign_oauth1.0(myapp,
token = "2976889521-heneahnPxX3IsHxxx2xH1pwOhhwqY5lUPXd7KbL",
token_secret = "8SDU0cTdpb6xavsKEUIFIfnFnsTN9vgaTjUW8Ue7ne8vP")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
homeTL
json1 = content(homeTL)
json2=jsonlite::fromJSON(toJSON(json1))
json2
json2[1,1:4]
library(httr)
myapp = oauth_app("twitter",
key = "j5PKAtLui0YwOADn1h4pfYQFg",
secret = "i5r8dVUFPtP0jmk2p0PlBlXlBeUBXah7qZfy7BqhTafL2J01YX")
sig = sign_oauth1.0(myapp,
token = "2976889521-heneahnPxX3IsHxxx2xH1pwOhhwqY5lUPXd7KbL",
token_secret = "8SDU0cTdpb6xavsKEUIFIfnFnsTN9vgaTjUW8Ue7ne8vP")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
json1=content(homeTL)
json2=jsonlite::fromJSON(toJSON(json1))
library(jsonlite)
json1=content(homeTL)
json2=jsonlite::fromJSON(toJSON(json1))
json2
homeTL
library(httr)
myapp = oauth_app("twitter",
key = "j5PKAtLui0YwOADn1h4pfYQFg",
secret = "i5r8dVUFPtP0jmk2p0PlBlXlBeUBXah7qZfy7BqhTafL2J01YX")
sig = sign_oauth1.0(myapp,
token = "2976889521-heneahnPxX3IsHxxx2xH1pwOhhwqY5lUPXd7KbL",
token_secret = "8SDU0cTdpb6xavsKEUIFIfnFnsTN9vgaTjUW8Ue7ne8vP")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
json1=content(homeTL)
json2=jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
json2
dim(json2)
sig = sign_oauth2.0(myapp,
token = "2976889521-heneahnPxX3IsHxxx2xH1pwOhhwqY5lUPXd7KbL",
token_secret = "8SDU0cTdpb6xavsKEUIFIfnFnsTN9vgaTjUW8Ue7ne8vP")
library(httr)
myapp = oauth_app("Philip R Getting and Cleaning",
key = "j5PKAtLui0YwOADn1h4pfYQFg",
secret = "i5r8dVUFPtP0jmk2p0PlBlXlBeUBXah7qZfy7BqhTafL2J01YX")
sig = sign_oauth1.0(myapp,
token = "2976889521-heneahnPxX3IsHxxx2xH1pwOhhwqY5lUPXd7KbL",
token_secret = "8SDU0cTdpb6xavsKEUIFIfnFnsTN9vgaTjUW8Ue7ne8vP")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
json1=content(homeTL)
json2=jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
homeTL
homeTL = GET("'https://api.twitter.com/1.1/' --header 'Authorization: OAuth oauth_consumer_key="j5PKAtLui0YwOADn1h4pfYQFg", oauth_nonce="a5c8f5a72885fe3a9e2423cca027b2eb", oauth_signature="L3osJX6ceNqKhhN4xKsjbLUbLKo%3D", oauth_signature_method="HMAC-SHA1", oauth_timestamp="1421181731", oauth_token="2976889521-heneahnPxX3IsHxxx2xH1pwOhhwqY5lUPXd7KbL", oauth_version="1.0"')
myapp = oauth_app("twitter",
key = "j5PKAtLui0YwOADn1h4pfYQFg",
secret = "i5r8dVUFPtP0jmk2p0PlBlXlBeUBXah7qZfy7BqhTafL2J01YX")
sig = sign_oauth1.0(myapp,
token = "2976889521-heneahnPxX3IsHxxx2xH1pwOhhwqY5lUPXd7KbL",
token_secret = "8SDU0cTdpb6xavsKEUIFIfnFnsTN9vgaTjUW8Ue7ne8vP")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
json1=content(homeTL)
json2=jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
library(httr)
myapp = oauth_app("twitter",
key = "j5PKAtLui0YwOADn1h4pfYQFg",
secret = "i5r8dVUFPtP0jmk2p0PlBlXlBeUBXah7qZfy7BqhTafL2J01YX")
sig = sign_oauth1.0(myapp,
token = "2976889521-heneahnPxX3IsHxxx2xH1pwOhhwqY5lUPXd7KbL",
token_secret = "8SDU0cTdpb6xavsKEUIFIfnFnsTN9vgaTjUW8Ue7ne8vP")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
homeTL
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
json1=content(homeTL)
json2=jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
json2
myapp = oauth_app("twitter",
key = "GQ4kOHkRFimMgDrPXhmoJtAp6",
secret = "VUQKsMPuOrCWFWGkzfWQrvr4ZvrdUww1o9gdzj6ZD8uaofufx0")
sig = sign_oauth1.0(myapp,
token = "2976889521-GXJ9evCT7IAbow2BSatIVldrqTiymZxHyjick07",
token_secret = "QiL3iv0qDUZ57vWoktJ7oFTeklNQLISA600nxscaM97i3")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
myapp = oauth_app("twitter",
key = "GQ4kOHkRFimMgDrPXhmoJtAp6",
secret = "VUQKsMPuOrCWFWGkzfWQrvr4ZvrdUww1o9gdzj6ZD8uaofufx0")
sig = sign_oauth1.0(myapp,
token = "2976889521-GXJ9evCT7IAbow2BSatIVldrqTiymZxHyjick07",
token_secret = "QiL3iv0qDUZ57vWoktJ7oFTeklNQLISA600nxscaM97i3")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
library("httr", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
library("jsonlite", lib.loc="/Library/Frameworks/R.framework/Versions/3.1/Resources/library")
myapp = oauth_app("twitter", key = "GQ4kOHkRFimMgDrPXhmoJtAp6",
secret = "VUQKsMPuOrCWFWGkzfWQrvr4ZvrdUww1o9gdzj6ZD8uaofufx0")
sig = sign_oauth1.0(myapp,
token = "2976889521-GXJ9evCT7IAbow2BSatIVldrqTiymZxHyjick07",
token_secret = "QiL3iv0qDUZ57vWoktJ7oFTeklNQLISA600nxscaM97i3")
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
homeTL
homeTL = GET("https://api.twitter.com/1/statuses/home_timeline.json", sig)
homeTL
json1=content(homeTL)
json2=jsonlite::fromJSON(toJSON(json1))
json2[1,1:4]
homeTL
homeTL = GET("https://api.twitter.com/1.1/statuses/home_timeline.json", sig)
homeTL
library(swirl)
install_from_swirl(Getting and Cleaning Data)
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
print(this_day)
year(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
print(this_moment)
second(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("192012\\")
ymd("1920/1/2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
this_moment <- update(this_moment, hours = 8, minutes = 34, seconds = 55)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
print(this_moment)
this_moment <- update(this_time)
this_moment <- update(this_moment)
this_moment <- update(this_moment, hours = 8, minutes = 41, seconds = 3)
this_moment
nyc<-now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
deaprt
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- dmy("June 17, 2008", tz = "Asia/Singapore")
last_time <- dmy("June 17, 2008", tz = "Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval()
?new_interval
how_long <- new_interval(last_time, arrive, tzone = "Asia/Hong_Kong")
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
setwd("~/Courses/Coursera/Reproducible Research/week2/Project Assignment1")
library(knitr)
knit2html("PA1_template.Rmd")
